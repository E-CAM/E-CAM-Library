..  sidebar:: Software Technical Information

  Name
    QMCQEPack_qepatch

  Language
    Fortran90

  Licence

  Documentation Tool
    Doxygen

  Relevant Training Material
    Not currently available

  Software Module Developed by
    Michele Ruggeri, Raymond C. Clay III

.. _QMCQEPack_qepatch:

#################
QMCQEPack_qepatch
#################

..  contents:: :local:

Purpose of Module
_________________

To obtain accurate results with ground state Quantum Monte Carlo methods (such as Variational and Diffusion Monte Carlo) an accurate trial wave function is essential.
Such a wave function for an electron system will be typically given by the product of two factors: (1) a Jastrow term :math:`J`  describing electronic correlations and (2) a Slater determinant of suitable single particle orbitals :math:`\phi_i`

.. math::

  \Psi({\bf R}) = J({\bf R}) \cdot \text{Det}(\phi_i({\bf r}_j))

where :math:`R` is the vector containing the position of all electrons and :math:`r_i` is the position of the :math:`i`-th electron.
While there is great freedom in the definition of the Jastrow term, that can then be variationally optimized, the single particle orbitals have to be computed in using Density Functional Theory.

The QMCQEPack_qepatch provides the files to properly patch Quantum Espresso 5.3 to build the ``libpwinterface.so`` library; this library is required to use the module :ref:`ESPWSCFInterface` to generate single particle orbitals during a QMCPack computation using Quantum Espresso.

Background Information
______________________

QMCPack is available from the github repository `<https://github.com/QMCPACK/qmcpack>`_,
and the documentation can be found in the QMCPack website `<https://qmcpack.org/documentation>`_.

Quantum Espresso can be installed using this module, and the documentation
can be found in the Quantum Espresso website `<https://www.quantum-espresso.org/resources/users-manual>`_.

Building and testing
____________________

The QMCQEPack_qepatch module can be found in the ``QMCQEPack`` branch of the QMCPack git repository 
`<https://github.com/michruggeri/qmcpack/tree/QMCQEPack>`_.
After cloning the repository and checking out the ``QMCQEPack`` branch with

``git clone https://github.com/michruggeri/qmcpack.git``

``git checkout QMCQEPack``

one can proceed to build the ``libpwinterface.so`` library using the using the script ``QMCQEPack_download_and_patch_qe.sh`` in the ``external_codes/quantum_espresso`` directory. After patching the code one has to use the ``configure`` script in the resulting ``q-e-qe-5.3`` directory and finally compile the ``libpwinterface.so`` library with ``make pw``. 
Note that when building the code it may be required to use the internal Quantum Espresso version of the FFTW libraries. In order to do so if is sufficient to change in the ``DFLAGS`` field of the ``make.sys`` file generated by the ``configure`` script ``-D__FFTW3`` with ``-D__FFTW``.

To use this library to perform DFT simulations QMCPack must be suitably compiled; the relevant information can be found in the documentation of the :ref:`ESPWSCFInterface` module.

The tests for this code are part of the deterministic unit tests for QMCPack, that can be run with the command

``ctest -R deterministic``

Source Code
___________

The source code is available available from `<https://github.com/michruggeri/qmcpack/tree/QMCQEPack>`_. 

.. Here are the URL references used (which is alternative method to the one described above)

.. _ReST: http://www.sphinx-doc.org/en/stable/rest.html
.. _Sphinx: http://www.sphinx-doc.org/en/stable/markup/index.html

